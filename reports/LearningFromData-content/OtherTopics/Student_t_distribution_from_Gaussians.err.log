Traceback (most recent call last):
  File "/usr/share/miniconda3/envs/2025-book-env/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/share/miniconda3/envs/2025-book-env/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/share/miniconda3/envs/2025-book-env/lib/python3.11/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/share/miniconda3/envs/2025-book-env/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/share/miniconda3/envs/2025-book-env/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/usr/share/miniconda3/envs/2025-book-env/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda3/envs/2025-book-env/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda3/envs/2025-book-env/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Settings
from datetime import date
today = date.today()
date_formatted = today.strftime("%d%b%Y")

gif_filename = 'Student_t_animation_' + date_formatted  # filename for gif
width, height = 640, 224  # dimensions of each frame
nframes = 120  #  80  # number of frames
fps = 3  # frames per second
interval = 100

num_bins = 50
delta_bin = 2 * x_max / (num_bins)
frame_switch = 40
frame_skip = N_gamma / 100
index_max = int(frame_switch + (nframes - frame_switch) * frame_skip)
print(f'max index: {index_max}')
hist_pts_all, bin_edges = np.histogram(norm_scaled_vals[:index_max], bins=num_bins, range=(-x_max, x_max))
hist_norm = 1 / (np.sum(hist_pts_all) * delta_bin)  #  1 / max(hist_pts)


fig = plt.figure(figsize=(4,3))
anim = animation.FuncAnimation(fig, animate, frames=nframes, repeat=False)

# Save as an animated gif
# print('Saving animated gif: ', gif_filename + '.gif')
# anim.save(gif_filename + '.gif', writer='imagemagick', fps=fps)

# saving to mp4 using ffmpeg writer
print('Saving mp4 video: ', gif_filename + '.mp4')
writervideo = animation.FFMpegWriter(fps=fps)
anim.save(gif_filename + '.mp4', writer=writervideo)

------------------

----- stdout -----
max index: 4840
Saving mp4 video:  Student_t_animation_27Sep2025.mp4
------------------

[31m---------------------------------------------------------------------------[39m
[31mFileNotFoundError[39m                         Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[14][39m[32m, line 32[39m
[32m     30[39m [38;5;28mprint[39m([33m'[39m[33mSaving mp4 video: [39m[33m'[39m, gif_filename + [33m'[39m[33m.mp4[39m[33m'[39m)
[32m     31[39m writervideo = animation.FFMpegWriter(fps=fps)
[32m---> [39m[32m32[39m [43manim[49m[43m.[49m[43msave[49m[43m([49m[43mgif_filename[49m[43m [49m[43m+[49m[43m [49m[33;43m'[39;49m[33;43m.mp4[39;49m[33;43m'[39;49m[43m,[49m[43m [49m[43mwriter[49m[43m=[49m[43mwritervideo[49m[43m)[49m

[36mFile [39m[32m/usr/share/miniconda3/envs/2025-book-env/lib/python3.11/site-packages/matplotlib/animation.py:1098[39m, in [36mAnimation.save[39m[34m(self, filename, writer, fps, dpi, codec, bitrate, extra_args, metadata, extra_anim, savefig_kwargs, progress_callback)[39m
[32m   1093[39m     [38;5;28;01mreturn[39;00m a * np.array([r, g, b]) + [32m1[39m - a
[32m   1095[39m [38;5;66;03m# canvas._is_saving = True makes the draw_event animation-starting[39;00m
[32m   1096[39m [38;5;66;03m# callback a no-op; canvas.manager = None prevents resizing the GUI[39;00m
[32m   1097[39m [38;5;66;03m# widget (both are likewise done in savefig()).[39;00m
[32m-> [39m[32m1098[39m [43m[49m[38;5;28;43;01mwith[39;49;00m[43m [49m[43m([49m[43mwriter[49m[43m.[49m[43msaving[49m[43m([49m[38;5;28;43mself[39;49m[43m.[49m[43m_fig[49m[43m,[49m[43m [49m[43mfilename[49m[43m,[49m[43m [49m[43mdpi[49m[43m)[49m[43m,[49m
[32m   1099[39m [43m      [49m[43mcbook[49m[43m.[49m[43m_setattr_cm[49m[43m([49m[38;5;28;43mself[39;49m[43m.[49m[43m_fig[49m[43m.[49m[43mcanvas[49m[43m,[49m[43m [49m[43m_is_saving[49m[43m=[49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m [49m[43mmanager[49m[43m=[49m[38;5;28;43;01mNone[39;49;00m[43m)[49m[43m)[49m[43m:[49m
[32m   1100[39m [43m    [49m[38;5;28;43;01mif[39;49;00m[43m [49m[38;5;129;43;01mnot[39;49;00m[43m [49m[43mwriter[49m[43m.[49m[43m_supports_transparency[49m[43m([49m[43m)[49m[43m:[49m
[32m   1101[39m [43m        [49m[43mfacecolor[49m[43m [49m[43m=[49m[43m [49m[43msavefig_kwargs[49m[43m.[49m[43mget[49m[43m([49m[33;43m'[39;49m[33;43mfacecolor[39;49m[33;43m'[39;49m[43m,[49m
[32m   1102[39m [43m                                       [49m[43mmpl[49m[43m.[49m[43mrcParams[49m[43m[[49m[33;43m'[39;49m[33;43msavefig.facecolor[39;49m[33;43m'[39;49m[43m][49m[43m)[49m

[36mFile [39m[32m/usr/share/miniconda3/envs/2025-book-env/lib/python3.11/contextlib.py:137[39m, in [36m_GeneratorContextManager.__enter__[39m[34m(self)[39m
[32m    135[39m [38;5;28;01mdel[39;00m [38;5;28mself[39m.args, [38;5;28mself[39m.kwds, [38;5;28mself[39m.func
[32m    136[39m [38;5;28;01mtry[39;00m:
[32m--> [39m[32m137[39m     [38;5;28;01mreturn[39;00m [38;5;28mnext[39m([38;5;28mself[39m.gen)
[32m    138[39m [38;5;28;01mexcept[39;00m [38;5;167;01mStopIteration[39;00m:
[32m    139[39m     [38;5;28;01mraise[39;00m [38;5;167;01mRuntimeError[39;00m([33m"[39m[33mgenerator didn[39m[33m'[39m[33mt yield[39m[33m"[39m) [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;28;01mNone[39;00m

[36mFile [39m[32m/usr/share/miniconda3/envs/2025-book-env/lib/python3.11/site-packages/matplotlib/animation.py:221[39m, in [36mAbstractMovieWriter.saving[39m[34m(self, fig, outfile, dpi, *args, **kwargs)[39m
[32m    216[39m     _log.info([33m"[39m[33mDisabling savefig.bbox = [39m[33m'[39m[33mtight[39m[33m'[39m[33m, as it may cause [39m[33m"[39m
[32m    217[39m               [33m"[39m[33mframe size to vary, which is inappropriate for [39m[33m"[39m
[32m    218[39m               [33m"[39m[33manimation.[39m[33m"[39m)
[32m    220[39m [38;5;66;03m# This particular sequence is what contextlib.contextmanager wants[39;00m
[32m--> [39m[32m221[39m [38;5;28;43mself[39;49m[43m.[49m[43msetup[49m[43m([49m[43mfig[49m[43m,[49m[43m [49m[43moutfile[49m[43m,[49m[43m [49m[43mdpi[49m[43m,[49m[43m [49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m
[32m    222[39m [38;5;28;01mwith[39;00m mpl.rc_context({[33m'[39m[33msavefig.bbox[39m[33m'[39m: [38;5;28;01mNone[39;00m}):
[32m    223[39m     [38;5;28;01mtry[39;00m:

[36mFile [39m[32m/usr/share/miniconda3/envs/2025-book-env/lib/python3.11/site-packages/matplotlib/animation.py:312[39m, in [36mMovieWriter.setup[39m[34m(self, fig, outfile, dpi)[39m
[32m    309[39m [38;5;28mself[39m._w, [38;5;28mself[39m._h = [38;5;28mself[39m._adjust_frame_size()
[32m    310[39m [38;5;66;03m# Run here so that grab_frame() can write the data to a pipe. This[39;00m
[32m    311[39m [38;5;66;03m# eliminates the need for temp files.[39;00m
[32m--> [39m[32m312[39m [38;5;28;43mself[39;49m[43m.[49m[43m_run[49m[43m([49m[43m)[49m

[36mFile [39m[32m/usr/share/miniconda3/envs/2025-book-env/lib/python3.11/site-packages/matplotlib/animation.py:322[39m, in [36mMovieWriter._run[39m[34m(self)[39m
[32m    319[39m _log.info([33m'[39m[33mMovieWriter._run: running command: [39m[38;5;132;01m%s[39;00m[33m'[39m,
[32m    320[39m           cbook._pformat_subprocess(command))
[32m    321[39m PIPE = subprocess.PIPE
[32m--> [39m[32m322[39m [38;5;28mself[39m._proc = [43msubprocess[49m[43m.[49m[43mPopen[49m[43m([49m
[32m    323[39m [43m    [49m[43mcommand[49m[43m,[49m[43m [49m[43mstdin[49m[43m=[49m[43mPIPE[49m[43m,[49m[43m [49m[43mstdout[49m[43m=[49m[43mPIPE[49m[43m,[49m[43m [49m[43mstderr[49m[43m=[49m[43mPIPE[49m[43m,[49m
[32m    324[39m [43m    [49m[43mcreationflags[49m[43m=[49m[43msubprocess_creation_flags[49m[43m)[49m

[36mFile [39m[32m/usr/share/miniconda3/envs/2025-book-env/lib/python3.11/subprocess.py:1026[39m, in [36mPopen.__init__[39m[34m(self, args, bufsize, executable, stdin, stdout, stderr, preexec_fn, close_fds, shell, cwd, env, universal_newlines, startupinfo, creationflags, restore_signals, start_new_session, pass_fds, user, group, extra_groups, encoding, errors, text, umask, pipesize, process_group)[39m
[32m   1022[39m         [38;5;28;01mif[39;00m [38;5;28mself[39m.text_mode:
[32m   1023[39m             [38;5;28mself[39m.stderr = io.TextIOWrapper([38;5;28mself[39m.stderr,
[32m   1024[39m                     encoding=encoding, errors=errors)
[32m-> [39m[32m1026[39m     [38;5;28;43mself[39;49m[43m.[49m[43m_execute_child[49m[43m([49m[43margs[49m[43m,[49m[43m [49m[43mexecutable[49m[43m,[49m[43m [49m[43mpreexec_fn[49m[43m,[49m[43m [49m[43mclose_fds[49m[43m,[49m
[32m   1027[39m [43m                        [49m[43mpass_fds[49m[43m,[49m[43m [49m[43mcwd[49m[43m,[49m[43m [49m[43menv[49m[43m,[49m
[32m   1028[39m [43m                        [49m[43mstartupinfo[49m[43m,[49m[43m [49m[43mcreationflags[49m[43m,[49m[43m [49m[43mshell[49m[43m,[49m
[32m   1029[39m [43m                        [49m[43mp2cread[49m[43m,[49m[43m [49m[43mp2cwrite[49m[43m,[49m
[32m   1030[39m [43m                        [49m[43mc2pread[49m[43m,[49m[43m [49m[43mc2pwrite[49m[43m,[49m
[32m   1031[39m [43m                        [49m[43merrread[49m[43m,[49m[43m [49m[43merrwrite[49m[43m,[49m
[32m   1032[39m [43m                        [49m[43mrestore_signals[49m[43m,[49m
[32m   1033[39m [43m                        [49m[43mgid[49m[43m,[49m[43m [49m[43mgids[49m[43m,[49m[43m [49m[43muid[49m[43m,[49m[43m [49m[43mumask[49m[43m,[49m
[32m   1034[39m [43m                        [49m[43mstart_new_session[49m[43m,[49m[43m [49m[43mprocess_group[49m[43m)[49m
[32m   1035[39m [38;5;28;01mexcept[39;00m:
[32m   1036[39m     [38;5;66;03m# Cleanup if the child failed starting.[39;00m
[32m   1037[39m     [38;5;28;01mfor[39;00m f [38;5;129;01min[39;00m [38;5;28mfilter[39m([38;5;28;01mNone[39;00m, ([38;5;28mself[39m.stdin, [38;5;28mself[39m.stdout, [38;5;28mself[39m.stderr)):

[36mFile [39m[32m/usr/share/miniconda3/envs/2025-book-env/lib/python3.11/subprocess.py:1955[39m, in [36mPopen._execute_child[39m[34m(self, args, executable, preexec_fn, close_fds, pass_fds, cwd, env, startupinfo, creationflags, shell, p2cread, p2cwrite, c2pread, c2pwrite, errread, errwrite, restore_signals, gid, gids, uid, umask, start_new_session, process_group)[39m
[32m   1953[39m     err_msg = os.strerror(errno_num)
[32m   1954[39m [38;5;28;01mif[39;00m err_filename [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[32m-> [39m[32m1955[39m     [38;5;28;01mraise[39;00m child_exception_type(errno_num, err_msg, err_filename)
[32m   1956[39m [38;5;28;01melse[39;00m:
[32m   1957[39m     [38;5;28;01mraise[39;00m child_exception_type(errno_num, err_msg)

[31mFileNotFoundError[39m: [Errno 2] No such file or directory: 'ffmpeg'

